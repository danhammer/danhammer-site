{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pac",
				"packages"
			],
			[
				"redu",
				"reduntant_links	statement"
			],
			[
				"row",
				"row_count	statement"
			],
			[
				"find",
				"find_all"
			],
			[
				"att",
				"attr_rows"
			],
			[
				"col-sm",
				"col-sm-3"
			],
			[
				"field-",
				"field-label"
			],
			[
				"htm",
				"html"
			],
			[
				"html",
				"html_doc"
			],
			[
				"ca",
				"catchability	statement"
			],
			[
				"time",
				"time_scale	param"
			],
			[
				"margin",
				"marginal_cost	statement"
			],
			[
				"pri",
				"properties"
			],
			[
				"sys",
				"system_idx	param"
			],
			[
				"form_",
				"form_fields"
			],
			[
				"Image",
				"ImageFont	module"
			],
			[
				"reside",
				"residential_bool	param"
			],
			[
				"resi",
				"residential_bool	param"
			],
			[
				"Re",
				"RequestHandler"
			],
			[
				"e",
				"encode"
			],
			[
				"city",
				"city_text"
			],
			[
				"facil",
				"facilities"
			],
			[
				"cit",
				"city_text"
			],
			[
				"cross",
				"cross"
			],
			[
				"en",
				"entity	param"
			],
			[
				"sorte",
				"sorted_cities	statement"
			],
			[
				"sor",
				"sorted_cities"
			],
			[
				"dis",
				"disambiguated"
			],
			[
				"res",
				"result"
			],
			[
				"date",
				"datetime	class"
			],
			[
				"base",
				"base_url	statement"
			],
			[
				"EV",
				"EVIHandler"
			],
			[
				"load",
				"load_data	function"
			],
			[
				"labe",
				"label_dict	statement"
			],
			[
				"re",
				"retail"
			],
			[
				"in",
				"industrial"
			],
			[
				"label_",
				"label_str	statement"
			],
			[
				"label",
				"label_names	statement"
			],
			[
				"list",
				"listdir	function"
			],
			[
				"data",
				"data_name	param"
			],
			[
				"img",
				"img_name	param"
			],
			[
				"imga",
				"image_directory"
			],
			[
				"image",
				"image_directory	param"
			],
			[
				"train",
				"train_set_y	statement"
			],
			[
				"n",
				"ntrain	param"
			],
			[
				"nu",
				"numpy	module"
			],
			[
				"split",
				"split_n_save	function"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"meta",
				"meta_dict	param"
			],
			[
				"local",
				"local_path	param"
			],
			[
				"get",
				"get_metadata	function"
			],
			[
				"set_con",
				"set_contents_from_string	function"
			],
			[
				"change",
				"change_pts	statement"
			],
			[
				"dete",
				"detect_change	function"
			],
			[
				"filter",
				"filter_imgs	function"
			],
			[
				"liken",
				"likeness_ratio	statement"
			],
			[
				"des",
				"descriptors"
			],
			[
				"ref",
				"reference	param"
			],
			[
				"end",
				"end_date"
			],
			[
				"start",
				"start_date"
			],
			[
				"fido",
				"fido_item	param"
			],
			[
				"key",
				"keypoints"
			],
			[
				"de",
				"descriptors"
			],
			[
				"out",
				"outpath	param"
			],
			[
				"lin",
				"linalg"
			],
			[
				"admiss",
				"admissable_tuples	statement"
			],
			[
				"geom",
				"geometry"
			],
			[
				"tag",
				"tag_keys	statement"
			],
			[
				"fea",
				"feature_collection	statement"
			],
			[
				"coord",
				"coord_list	param"
			],
			[
				"cart",
				"cartodb_query	function"
			],
			[
				"coo",
				"coord_list	param"
			],
			[
				"assert",
				"assertIs	function"
			],
			[
				"assertIs",
				"assertIsInstance	function"
			],
			[
				"targ",
				"target_siftfeats	statement"
			],
			[
				"assertis",
				"assertIsNotNone	function"
			],
			[
				"ass",
				"assertListEqual	function"
			],
			[
				"asser",
				"assertEqual	function"
			],
			[
				"gray",
				"gray_count	statement"
			],
			[
				"cv",
				"cv2	module"
			],
			[
				"trans",
				"transfer_function"
			],
			[
				"refe",
				"reference_cdf	statement"
			],
			[
				"interp",
				"interp1d	class"
			],
			[
				"chan",
				"change_points"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "rep",
		"selected_items":
		[
			[
				"rep",
				"SublimeREPL: Python"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"repl sh",
				"SublimeREPL: Shell"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"repl r",
				"SublimeREPL: R"
			],
			[
				"re r",
				"SublimeREPL: R"
			],
			[
				"rep r",
				"SublimeREPL: R"
			],
			[
				"re",
				"SublimeREPL: Python"
			],
			[
				"rep py",
				"SublimeREPL: Python"
			],
			[
				"repl py",
				"SublimeREPL: Python"
			],
			[
				"repl",
				"SublimeREPL: Shell"
			],
			[
				"glue",
				"Glue - Launch"
			],
			[
				"rep sh",
				"SublimeREPL: Shell"
			],
			[
				"glu",
				"Glue - Launch"
			],
			[
				"repl shel",
				"SublimeREPL: Shell"
			],
			[
				"sublime py",
				"SublimeREPL: Python"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			]
		],
		"width": 457.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"ls",
			"subleim",
			"ls",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r"
	],
	"file_history":
	[
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/water.py",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/index.html",
		"/Users/danhammer/Dropbox/github/danhammer/empirical-paper/write-up/paper.tex",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/api.py",
		"/Users/danhammer/Library/Application Support/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/terminal.glue",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/utils/terminal.glue",
		"/Users/danhammer/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/danhammer/Dropbox/github/danhammer/water-test/app.js",
		"/Users/danhammer/Dropbox/github/danhammer/water-test/index.html",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/README.md",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/utils/water.py",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/envirohook.py",
		"/Users/danhammer/Desktop/nasa.ocio.api@gmail.com",
		"/Users/danhammer/Downloads/AnalysisExport (1).json",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/.gitignore",
		"/Users/danhammer/Dropbox/github/earth-genome/water-service/app.yaml",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/config.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/api.py",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/_posts/2015-11-19-exceptional-control.markdown",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/_posts/2015-10-29-differential-eq.markdown",
		"/Users/danhammer/Desktop/emails.txt",
		"/Users/danhammer/Desktop/notes.txt",
		"/Users/danhammer/Dropbox/github/danhammer/empirical-paper/write-up/tables/warped-prop.tex",
		"/Users/danhammer/Dropbox/nature-submission/res.tex",
		"/Users/danhammer/Dropbox/github/danhammer/empirical-paper/src/r/journal-graphs.R",
		"/Users/danhammer/Dropbox/github/danhammer/empirical-paper/src/r/graph-trends.R",
		"/Users/danhammer/Dropbox/github/danhammer/empirical-paper/src/r/analysis.R",
		"/Users/danhammer/Dropbox/github/danhammer/empirical-paper/src/r/moderate-cluster.R",
		"/Users/danhammer/Dropbox/github/danhammer/empirical-paper/src/r/cluster-characteristics.R",
		"/Users/danhammer/Dropbox/github/nasa/analytics-presentation/graphics.R",
		"/Users/danhammer/Dropbox/github/wri/site-analytics/analysis/graphs.R",
		"/usr/include/tar.h",
		"/Users/danhammer/Dropbox/jobs.py",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/projects.html",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/about.html",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/_layouts/default.html",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/css/style.css",
		"/Users/danhammer/Downloads/Chapter 18 fish/fish2andhalf.m",
		"/Users/danhammer/Dropbox/github/danhammer/diff-eq/pred.py",
		"/Users/danhammer/Desktop/Fellows",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/_config.yml",
		"/Users/danhammer/Desktop/fish.py",
		"/Users/danhammer/Desktop/pred.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/envirohook.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/crops.py",
		"/Users/danhammer/Dropbox/github/danhammer/crop-website/index.html",
		"/Users/danhammer/Dropbox/github/danhammer/crop-website/app.js",
		"/Users/danhammer/Downloads/Chapter 18 fish/lightcorner.m",
		"/Users/danhammer/Downloads/Chapter 18 fish/corner.m",
		"/Users/danhammer/Desktop/team.txt",
		"/Users/danhammer/Desktop/spec.txt",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/_posts/2015-05-31-ois-map.markdown",
		"/Users/danhammer/Desktop/Applications.",
		"/Users/danhammer/Dropbox/github/danhammer/crop-website/app.css",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/academic.html",
		"/Users/danhammer/Dropbox/github/danhammer/danhammer-site/r/favicon.ico",
		"/Users/danhammer/Downloads/replication_of_Table A.4.1.R",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/vegetation.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/nighttime.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/atmosphere.py",
		"/Users/danhammer/Dropbox/github/SpaceKnow/computer-vision/preprocess/histmatch.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/nightlight.py",
		"/Users/danhammer/Desktop/WORKSHOP TOEXPLORE PUBLIC-PRIVATE PARTNER",
		"/Users/danhammer/Desktop/test.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/osm.py",
		"/Users/danhammer/Desktop/tester.py",
		"/Users/danhammer/Desktop/tester2.py",
		"/Users/danhammer/Desktop/Robin and Adam!",
		"/Users/danhammer/Desktop/eg.txt",
		"/Users/danhammer/Desktop/Dear Beth,",
		"/Users/danhammer/Dropbox/images/label.py",
		"/Users/danhammer/Dropbox/grapher.R",
		"/Users/danhammer/Dropbox/taupaki-notes.txt",
		"/Users/danhammer/Dropbox/Procurement Language",
		"/Users/danhammer/Dropbox/grab_images.py",
		"/Users/danhammer/Desktop/methods.txt",
		"/Users/danhammer/pafy.py",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/fido/fido/fido.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-server/mods/vegetation.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-server/api.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-server/api.pyc",
		"/Users/danhammer/Dropbox/NZ-Shared/Geothermal/c1249.pdf",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/osm-utils/osmutils/tagger.py",
		"/Users/danhammer/Dropbox/github/danhammer/water-test/app.css",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/osm-utils/api.py",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/osm-utils/app.yaml",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/.git/config",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-server/client/timeseries.R",
		"/Users/danhammer/Dropbox/pif-notes.txt",
		"/Users/danhammer/Dropbox/pif-notes",
		"/Users/danhammer/Desktop/ninja.svg",
		"/Users/danhammer/Desktop/client.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/deforestation.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/app.yaml",
		"/Users/danhammer/Desktop/This is good.",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/osm-utils/osmutils/osm.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/buildings.py",
		"/Users/danhammer/Dropbox/response.txt",
		"/Users/danhammer/Desktop/def.py",
		"/Users/danhammer/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/ninja-data/ninjadata/deeplearning.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/paths.py",
		"/Users/danhammer/Desktop/invitation text",
		"/Users/danhammer/Desktop/Hiso",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/dummy.py",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-service/utils/utils.py",
		"/Users/danhammer/Dropbox/github/SpaceKnow/ee-analysis/app.yaml",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/geo-stories/api.py",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/geo-stories/geostories/alchemy/stories.py",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/geo-stories/geostories/alchemy/carto.py",
		"/Users/danhammer/Desktop/tasks.txt",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/geo-stories/geostories/carto.py",
		"/Users/danhammer/Dropbox/github/nasa/planetary-api/api.py",
		"/Users/danhammer/Dropbox/github/nasa/planetary-api/utils/utils.py",
		"/Users/danhammer/Dropbox/github/nasa/planetary-api/earth/earth.py",
		"/Users/danhammer/Dropbox/github/SpaceKnow/story-scrape/osm/overpass.py",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/geo-stories/app.yaml",
		"/Users/danhammer/Dropbox/github/SpaceKnow/story-scrape/api.py",
		"/Users/danhammer/Desktop/Hi Evan,",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-server/mods/water.py",
		"/Users/danhammer/Dropbox/github/SpaceKnow/ninja-service/lib/pyshorteners/shorteners.py",
		"/Users/danhammer/Desktop/david wheeler",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/ninja-data/.gitignore",
		"/Users/danhammer/Desktop/how to start a start-up.",
		"/Users/danhammer/Dropbox/github/danhammer/enviro-server/water.py",
		"/Users/danhammer/Dropbox/github/SpaceNinjaHQ/osm-utils/osmutils/splitsaver.py",
		"/Users/danhammer/Dropbox/github/SpaceKnow/ninja-service/app.yaml"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"exceptional",
			"prop-res",
			"table",
			"red",
			"ssize",
			"coords",
			"address",
			"industrial",
			"admin"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "danhammer-site.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"*REPL* [python]"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/github/danhammer/danhammer-site/danhammer-site.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
